!function(){"use strict";class t{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handeImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeBtn=this._card.querySelector("#card_like-button"),this._deleteBtn=this._card.querySelector(".card__delete-btn"),this._image=this._card.querySelector(".card__image"),this._likeBtn.addEventListener("click",(()=>this._toggleLikeBtn())),this._deleteBtn.addEventListener("click",(()=>this._removeCard())),this._image.addEventListener("click",(()=>this._openImage()))}_openImage(){this._handeImageClick(this._link,this._name)}_toggleLikeBtn(){this._likeBtn.classList.toggle("card__like-button_enabled")}_removeCard(){this._card.remove(),this._card=null}getView(){return this._card=this._getTemplate(),this._setEventListeners(),this._image.src=this._link,this._image.alt=this._name,this._card.querySelector(".card__title").textContent=this._name,this._card}}const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button-disabled",inputErrorClass:".modal__input-type-error",errorClass:"modal__error_visible",cardSectionClass:".cards__list",cardTeplate:".card__teplate"};class s{constructor(t,e){let{data:s,renderer:i}=t;this._renderedItems=s,this._renderer=i,this._container=document.querySelector(e)}addItem(t){this._container.prepend(t)}renderItems(){this._renderedItems.forEach((t=>{this._renderer(t)}))}}class i{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeByEsc)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeByEsc)}_closeByEsc=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(t=>{t.target.classList.contains("modal")&&this.close(),t.target.classList.contains("modal__close-button")&&this.close()}))}}class r extends i{constructor(t,s){super({popupSelector:t}),this._popupFormEl=this._popupElement.querySelector(e.formSelector),this._inputEls=this._popupFormEl.querySelectorAll(e.inputSelector),this._handleSubmit=s}setInputValues(t){this._inputEls.forEach((e=>{e.value=t[e.name]}))}close(){super.close(),this._popupFormEl.reset()}_getInputValues(){const t={};return this._inputEls.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupFormEl.addEventListener("submit",(()=>{this._handleSubmit(this._getInputValues())}))}}const n=document.querySelector("#profile__add-button"),o=document.querySelector("#profile__edit-btn");let l;function a(e){const s=function(e){return new t(e,"#card__template",c).getView()}(e);l.addItem(s)}function c(t,e){d.open(t,e)}new class{constructor(t){this._baseUrl=t.baseUrl,this._headers=t.headers}_checkResponse(t){return t.ok?(console.log("its here!"),t.json()):Promise.reject(`Error: ${t.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserIngo(){}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"cd8b3986-f3d6-4da9-8f48-96bc48ae4bb7","Content-Type":"application/json"}}).getInitialCards().then((t=>{l=new s({data:t,renderer:t=>{a(t)}},e.cardSectionClass)})),l.renderItems();const _=new class{constructor(t){let{title:e,subtitle:s}=t;this._nameEl=document.querySelector(e),this._jobEl=document.querySelector(s)}getUserInfo(){return{title:this._nameEl.textContent,subtitle:this._jobEl.textContent}}setUserInfo(t){this._nameEl.textContent=t.title,this._jobEl.textContent=t.subtitle}}({title:".profile__title",subtitle:".profile__subtitle"}),d=new class extends i{constructor(t){super({popupSelector:t}),this._image=this._popupElement.querySelector(".modal__image"),this._caption=this._popupElement.querySelector(".modal__image-caption")}open(t,e){super.open(),this._image.src=t,this._image.alt=e,this._caption.textContent=e}}("#card__image-modal"),u=new r("#profile__add-modal",(t=>{a(t),u.close()})),h=new r("#profile__edit-modal",(t=>{_.setUserInfo(t),h.close()}));l.renderItems();const m={};(t=>{Array.from(document.querySelectorAll(t.formSelector)).forEach((e=>{const s=new class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=e,this._buttonEl=this._formElement.querySelector(this._submitButtonSelector),this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)]}_setEventListeners(){this._inputEls.forEach((t=>{t.addEventListener("input",(()=>{this._checkValidity(t),this._toggleSubmitBtn(t)})),this._disableSubmitBtn(),this._formElement.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleSubmitBtn(t)}),0)}))}))}_checkValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_showInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_toggleSubmitBtn(){this._hasInvalidInput()?this._disableSubmitBtn():this._enableSubmitBtn()}_hasInvalidInput(){return!this._inputEls.every((t=>t.validity.valid))}_disableSubmitBtn(){this._buttonEl.classList.add(this._inactiveButtonClass),this._buttonEl.disabled=!0}_enableSubmitBtn(){this._buttonEl.classList.remove(this._inactiveButtonClass),this._buttonEl.disabled=!1}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}}(t,e),i=e.getAttribute("name");m[i]=s,s.enableValidation()}))})(e),d.setEventListeners(),u.setEventListeners(),h.setEventListeners(),n.addEventListener("click",(()=>u.open())),o.addEventListener("click",(()=>{h.open(),h.setInputValues(_.getUserInfo())}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,